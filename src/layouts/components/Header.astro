---
import HeaderLink from './HeaderLink.astro';
import { Image } from 'astro:assets';
import GithubWhite from '@src/assets/svgs/github-mark-white.svg';
import GithubBlack from '@src/assets/svgs/github-mark.svg';

const menu = [
	{
		link: '/about/',
		label: 'About'
	},
	{
		link: '/posts/',
		label: 'Posts'
	},
	{
		link: '/projects/',
		label: 'Projects'
	},
	{
		link: '/tags/',
		label: 'Tags'
	}
];
---

<header
	id='site-header'
	class:list={[
		'fixed top-0 left-0 right-0 flex items-center w-full transition-all duration-300 z-[999] backdrop-blur-md bg-white/80 dark:bg-dark-200/80 border-b border-gray-200 dark:border-gray-800'
	]}
>
	<div class='container'>
		<nav class='flex gap-4 items-center justify-between py-3'>
			<h2 class='m-0'>
				<a href='/' class='flex gap-3 items-center text-xl font-black'>
					<div class='relative'>
						<div class='absolute inset-0 rounded-full bg-gradient-to-r from-primary-400 to-purple-500 blur-[2px] opacity-70 animate-pulse'>
						</div>
						<img
							src='/profile-zoomed.webp'
							alt='Muhamad Risman'
							class='relative rounded-full w-10 h-10 border-2 border-white dark:border-dark-100 shadow-lg object-cover'
						/>
					</div>
					<span
						class='bg-gradient-to-r from-primary-600 to-purple-600 dark:from-primary-400 dark:to-purple-400 text-transparent bg-clip-text font-bold'
						>Risman</span
					>
				</a>
			</h2>

			<!-- Desktop Navigation -->
			<div class='hidden md:flex items-center space-x-1'>
				{
					menu.map((item) => (
						<HeaderLink
							class='px-3 py-2 rounded-md text-sm font-medium transition-colors hover:bg-gray-100 dark:hover:bg-dark-100'
							href={item.link}>
							{item.label}
						</HeaderLink>
					))
				}
			</div>

			<div class='flex items-center gap-2'>
				<a
					class='p-2 rounded-full hover:bg-gray-100 dark:hover:bg-dark-100 transition-colors dark:hidden'
					href='https://github.com/realrisman'
					target='_blank'><Image src={GithubBlack} width={22} height={22} alt='Github logo' /></a
				>
				<a
					class='p-2 rounded-full hover:bg-gray-100 dark:hover:bg-dark-100 transition-colors hidden dark:block'
					href='https://github.com/realrisman'
					target='_blank'><Image src={GithubWhite} width={22} height={22} alt='Github logo' /></a
				>
				<button
					class='p-2 rounded-full hover:bg-gray-100 dark:hover:bg-dark-100 transition-colors'
					id='themeToggle'
					aria-label='Theme mode'
				>
					<svg
						class='sun'
						xmlns='http://www.w3.org/2000/svg'
						width='22'
						height='22'
						viewBox='0 0 24 24'
						fill='none'
						stroke='currentColor'
						stroke-width='2'
						stroke-linecap='round'
						stroke-linejoin='round'
						><circle cx='12' cy='12' r='4'></circle><path d='M12 2v2'></path><path d='M12 20v2'></path><path d='m4.93 4.93 1.41 1.41'
						></path><path d='m17.66 17.66 1.41 1.41'></path><path d='M2 12h2'></path><path d='M20 12h2'></path><path
							d='m6.34 17.66-1.41 1.41'></path><path d='m19.07 4.93-1.41 1.41'></path></svg
					>
					<svg
						class='moon'
						xmlns='http://www.w3.org/2000/svg'
						width='22'
						height='22'
						viewBox='0 0 24 24'
						fill='none'
						stroke='currentColor'
						stroke-width='2'
						stroke-linecap='round'
						stroke-linejoin='round'
					>
						<path d='M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z'></path></svg
					>
				</button>

				<!-- Mobile menu button -->
				<button id='mobile-menu-button' class='md:hidden p-2 rounded-md hover:bg-gray-100 dark:hover:bg-dark-100 transition-colors'>
					<svg
						xmlns='http://www.w3.org/2000/svg'
						width='22'
						height='22'
						viewBox='0 0 24 24'
						fill='none'
						stroke='currentColor'
						stroke-width='2'
						stroke-linecap='round'
						stroke-linejoin='round'
						class='menu-icon'
					>
						<line x1='4' x2='20' y1='12' y2='12'></line>
						<line x1='4' x2='20' y1='6' y2='6'></line>
						<line x1='4' x2='20' y1='18' y2='18'></line>
					</svg>
					<svg
						xmlns='http://www.w3.org/2000/svg'
						width='22'
						height='22'
						viewBox='0 0 24 24'
						fill='none'
						stroke='currentColor'
						stroke-width='2'
						stroke-linecap='round'
						stroke-linejoin='round'
						class='close-icon hidden'
					>
						<path d='M18 6 6 18'></path>
						<path d='m6 6 12 12'></path>
					</svg>
				</button>
			</div>
		</nav>
	</div>

	<!-- Mobile Navigation Menu -->
	<div id='mobile-menu' class='fixed inset-0 z-[998] bg-white/95 dark:bg-dark-200/95 backdrop-blur-md hidden pt-20'>
		<nav class='container py-5'>
			<ul class='space-y-4'>
				{
					menu.map((item) => (
						<li>
							<a href={item.link} class='block py-3 px-4 text-lg font-medium border-b border-gray-100 dark:border-gray-800'>
								{item.label}
							</a>
						</li>
					))
				}
				<li class='pt-4'>
					<a href='mailto:real.risman@gmail.com' class='block py-3 px-4 text-lg font-medium text-primary-600 dark:text-primary-400'>
						Contact Me
					</a>
				</li>
			</ul>
		</nav>
	</div>

	<style is:global>
		#themeToggle .moon {
			display: none;
		}
		.dark #themeToggle .sun {
			display: none;
		}
		.dark #themeToggle .moon {
			display: block;
		}
	</style>

	<script is:inline>
		const theme = (() => {
			if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
				return 'dark';
			}
			if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
				return localStorage.getItem('theme');
			}
			return 'light';
		})();

		if (theme === 'light') {
			document.documentElement.classList.remove('dark');
		} else {
			document.documentElement.classList.add('dark');
		}

		window.localStorage.setItem('theme', theme || '');

		function sendMessage(message) {
			const iframe = document.querySelector('iframe.giscus-frame');
			if (!iframe) return;
			iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');
		}

		const handleToggleClick = () => {
			const element = document.documentElement;
			element.classList.toggle('dark');

			const isDark = element.classList.contains('dark');
			if (isDark) {
				sendMessage({
					setConfig: {
						theme: 'dark_dimmed'
					}
				});
			} else {
				sendMessage({
					setConfig: {
						theme: 'light'
					}
				});
			}
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		};
		document.getElementById('themeToggle')?.addEventListener('click', handleToggleClick);

		// Mobile menu toggle
		document.addEventListener('DOMContentLoaded', () => {
			const mobileMenuButton = document.getElementById('mobile-menu-button');
			const mobileMenu = document.getElementById('mobile-menu');
			const menuIcon = document.querySelector('.menu-icon');
			const closeIcon = document.querySelector('.close-icon');

			if (mobileMenuButton && mobileMenu) {
				mobileMenuButton.addEventListener('click', () => {
					mobileMenu.classList.toggle('hidden');
					menuIcon.classList.toggle('hidden');
					closeIcon.classList.toggle('hidden');
					document.body.classList.toggle('overflow-hidden');
				});

				// Close menu when clicking on a link
				const mobileLinks = mobileMenu.querySelectorAll('a');
				mobileLinks.forEach((link) => {
					link.addEventListener('click', () => {
						mobileMenu.classList.add('hidden');
						menuIcon.classList.remove('hidden');
						closeIcon.classList.add('hidden');
						document.body.classList.remove('overflow-hidden');
					});
				});
			}
		});
	</script>
</header>
